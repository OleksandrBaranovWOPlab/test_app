/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SavingsStatistics as PrismaSavingsStatistics,
  User as PrismaUser,
} from "@prisma/client";

export class SavingsStatisticsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SavingsStatisticsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.savingsStatistics.count(args);
  }

  async savingsStatisticsItems(
    args: Prisma.SavingsStatisticsFindManyArgs
  ): Promise<PrismaSavingsStatistics[]> {
    return this.prisma.savingsStatistics.findMany(args);
  }
  async savingsStatistics(
    args: Prisma.SavingsStatisticsFindUniqueArgs
  ): Promise<PrismaSavingsStatistics | null> {
    return this.prisma.savingsStatistics.findUnique(args);
  }
  async createSavingsStatistics(
    args: Prisma.SavingsStatisticsCreateArgs
  ): Promise<PrismaSavingsStatistics> {
    return this.prisma.savingsStatistics.create(args);
  }
  async updateSavingsStatistics(
    args: Prisma.SavingsStatisticsUpdateArgs
  ): Promise<PrismaSavingsStatistics> {
    return this.prisma.savingsStatistics.update(args);
  }
  async deleteSavingsStatistics(
    args: Prisma.SavingsStatisticsDeleteArgs
  ): Promise<PrismaSavingsStatistics> {
    return this.prisma.savingsStatistics.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.savingsStatistics
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
